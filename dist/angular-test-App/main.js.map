{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/hola-mundo/hola-mundo.component.ts","./src/app/hola-mundo/hola-mundo.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Post } from '../Post';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  posts!: Post[];\n\n  constructor(private dataService: DataService) {\n    this.dataService.getData().subscribe(data => {\n      // console.log(data);\n      this.posts = data;\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>About</h3>\n<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam ipsa eius molestias maiores in? Ipsa officia, et, distinctio exercitationem aut expedita maiores quas harum ad in minus explicabo eveniet dignissimos?</p>\n\n<div *ngFor=\"let post of posts\">\n    <h3>{{ post.title }}</h3>\n    <p>{{ post.body }}</p>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nimport { DataService } from './data.service';\nimport { Post } from './Post';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n \n}\n","<ul>\n    <li>\n        <a routerLink=\"/\">Home</a>\n    </li>\n    <li>\n        <a routerLink=\"/about\">About</a>\n    </li>\n    <li>\n        <a routerLink=\"/user\">User</a>\n    </li>\n</ul>\n\n<router-outlet></router-outlet>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HolaMundoComponent } from './hola-mundo/hola-mundo.component';\nimport { UserComponent } from './user/user.component';\n\nimport { DataService } from './data.service';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Route[] = [\n  {path: '',component: HolaMundoComponent},\n  {path: 'about', component: AboutComponent},\n  {path: 'user', component: UserComponent}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    HolaMundoComponent,\n    UserComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Post } from './Post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { \n    console.log('service http is working!');\n  }\n\n  getData(){\n    return this.http.get<Post[]>('https://jsonplaceholder.typicode.com/posts');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hola-mundo',\n  templateUrl: './hola-mundo.component.html',\n  styleUrls: ['./hola-mundo.component.css']\n})\nexport class HolaMundoComponent implements OnInit {\n\n  title = 'Welcome to Angular'\n  subtitle = 'This is a Test'\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class= 'hello-world'>\n    <h1>{{ title }}</h1>\n    <h2>{{subtitle}}</h2>\n</div>\n<img src=\"../../assets/yo_pc.png\">\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Post } from '../Post';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  name: string = \"Ariel Martin\";\n  age: number = 40;\n\n  users: string[] = ['Ariel' , 'Romina', 'Calel', 'Eva', 'Yamy']\n  posts!: Post[];\n\n  constructor(private dataService: DataService){\n    this.dataService.getData().subscribe(data => {\n      //console.log(data);\n      this.posts = data;\n    });\n\n  }\n  ngOnInit(): void {\n    \n  }\n\n  addUser(newUser: any) {\n    console.log(newUser.value);\n    this.users.push(newUser.value);\n    newUser.value = '';\n    newUser.focus()\n    return false;\n  }\n\n  deleteUser(user: string) {\n    for(let i = 0; i < this.users.length; i++) {\n      if(user == this.users[i]) {\n        this.users.splice(i,1);\n      }\n    }\n\n  }\n\n}\n","<form (submit)=\"addUser(newUser)\">\n    <input type=\"text\" #newUser>\n    <button>Send User</button>\n</form>\n\n\n<ul>\n    <li *ngFor=\"let user of users\">\n        {{ user }} <button (click)=\"deleteUser(user)\">X</button>\n    </li>\n</ul>\n\n<div>\n<form >\n    <input type=\"text\" name=\"name\" [(ngModel)]=\"name\">\n    <input type=\"text\" name=\"age\" [(ngModel)]=\"age\">\n</form>\n\n    Name: {{ name }}<br>\n    Age: {{ age }}\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}